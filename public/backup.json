[
  {
    "title": "Sistema de Gestion de Inventario",
    "description": "Desarrollar una aplicaci√≥n web para controlar stock, registrar movimientos de entrada y salida, y generar reportes autom√°ticos de productos",
    "deadline": "2025-10-12",
    "priority": "media",
    "createdAt": "2025-09-25T22:06:35.153Z",
    "doc": "# Sistema de Gesti√≥n de Inventario üì¶\n\nEste proyecto tiene como objetivo crear una **aplicaci√≥n web moderna** que permita a empresas controlar de manera eficiente sus inventarios.\n\n## Objetivos principales\n- Reducir errores en el control de stock.  \n- Facilitar el registro de entradas y salidas de productos.  \n- Generar reportes autom√°ticos en PDF y Excel.  \n- Ofrecer un panel de usuario simple e intuitivo.  \n\n## Funcionalidades previstas\n1. **Gesti√≥n de productos:** alta, baja y modificaci√≥n de art√≠culos.  \n2. **Movimientos de stock:** registro de entradas, salidas y transferencias.  \n3. **Control de usuarios y roles:** administrador, supervisor y operador.  \n4. **Reportes en tiempo real:** dashboard con m√©tricas clave.  \n5. **Exportaci√≥n de datos:** posibilidad de descargar reportes en PDF o Excel.  \n\n## Tecnolog√≠as sugeridas\n- **Frontend:** React + Bootstrap.  \n- **Backend:** Node.js + Express.  \n- **Base de datos:** MySQL o PostgreSQL.  \n- **Extras:** librer√≠as de gr√°ficos (Chart.js o Recharts).  \n\n## Pr√≥ximos pasos\n- [ ] Configurar entorno de desarrollo.  \n- [ ] Dise√±ar esquema de base de datos.  \n- [ ] Implementar autenticaci√≥n con JWT.  \n- [ ] Desarrollar prototipo inicial del panel de control.  \n\n---\n_√öltima actualizaci√≥n: Septiembre 2025_\n",
    "tasks": [
      {
        "title": "Configurar base de datos inicial",
        "status": "pendiente"
      },
      {
        "title": "Implementar autenticaci√≥n y roles de usuario",
        "status": "en progreso"
      },
      {
        "title": "Crear m√≥dulo de registro de entradas y salidas de stock",
        "status": "pendiente"
      },
      {
        "title": "Generar reportes PDF/Exel descargables",
        "status": "pendiente"
      }
    ],
    "status": "pendiente"
  },
  {
    "title": "Landing Page Corporativa",
    "description": "Dise√±ar y programar una p√°gina institucional moderna y responsive, con formulario de contacto, secciones de servicios y testimonios de clientes.",
    "deadline": "2025-10-30",
    "priority": "baja",
    "createdAt": "2025-09-25T22:07:22.130Z",
    "doc": "# Documentaci√≥n del Proyecto: Landing Page Corporativa üöÄ\n\n## Objetivo\nCrear una landing page profesional que represente la identidad de la empresa, con un dise√±o atractivo y optimizado para conversi√≥n.\n\n## Requerimientos principales\n- Dise√±o limpio y moderno, alineado con la marca.\n- Responsive en todos los dispositivos.\n- Secciones clave: Hero, Servicios, Testimonios, Contacto.\n- Optimizaci√≥n SEO y performance.\n- Integraci√≥n de m√©tricas con Google Analytics.\n\n## Flujo de trabajo\n1. Dise√±o ‚Üí Wireframes y prototipos.\n2. Desarrollo ‚Üí HTML, CSS, JavaScript (o framework elegido).\n3. Optimizaci√≥n ‚Üí SEO, performance, accesibilidad.\n4. QA ‚Üí Test en dispositivos reales.\n5. Deploy ‚Üí Hosting + dominio.\n\n## Checklist\n- [ ] Header funcional y responsivo  \n- [ ] CTA principal visible  \n- [ ] Secci√≥n de servicios clara  \n- [ ] Testimonios agregados  \n- [ ] Formulario de contacto activo  \n- [ ] Deploy exitoso en servidor\n",
    "tasks": [
      {
        "title": "Bocetar wireframes de p√°gina principal",
        "status": "pendiente"
      },
      {
        "title": "Definir paletas de colores y tipografia",
        "status": "en progreso"
      },
      {
        "title": "Maquetar el header con logo y men√∫ responsive",
        "status": "completado"
      },
      {
        "title": "Formulario de contacto con validaci√≥n",
        "status": "pendiente"
      },
      {
        "title": "Testear responsividad en m√≥viles tablets",
        "status": "en progreso"
      }
    ],
    "status": "en progreso"
  },
  {
    "title": "Plataforma de E-Learning",
    "description": "Crear un sistema de cursos online con registro de usuarios, carga de materiales en PDF/video, y evaluaciones con calificaci√≥n autom√°tica.",
    "deadline": "2025-10-03",
    "priority": "media",
    "createdAt": "2025-09-25T22:08:04.397Z",
    "doc": "# üéì Plataforma de E-learning\n\nEste proyecto tiene como objetivo construir una plataforma integral de educaci√≥n en l√≠nea.\n\n## Funcionalidades principales\n- Registro de usuarios (estudiantes y profesores).\n- Subida de cursos con distintos tipos de contenido:\n  - Videos\n  - PDFs\n  - Cuestionarios interactivos\n- Sistema de b√∫squeda y filtrado por categor√≠as.\n- Progreso de cursos y generaci√≥n de certificados.\n- M√≥dulo de pagos para cursos premium.\n\n## Tecnolog√≠as\n- **Frontend**: React + Bootstrap\n- **Backend**: Node.js + Express\n- **Base de datos**: MongoDB\n- **Autenticaci√≥n**: JWT (JSON Web Tokens)\n- **Multimedia**: Cloud Storage (ej: AWS S3)\n\n## Objetivos\n1. Crear una plataforma escalable y segura para la educaci√≥n online.\n2. Mejorar la experiencia de aprendizaje con herramientas interactivas.\n3. Ofrecer a los instructores un espacio para monetizar sus cursos.\n",
    "tasks": [
      {
        "title": "Implementar sistema de registro e inicio de sesi√≥n",
        "status": "en progreso"
      },
      {
        "title": "Crear m√≥dulo de subida de cursos",
        "status": "completado"
      },
      {
        "title": "Desarrollar buscador y filtrado de cursos",
        "status": "pendiente"
      },
      {
        "title": "Habilitar pasarela de pagos para cursos premiun",
        "status": "pendiente"
      },
      {
        "title": "Dise√±ar sistema de pagos para cursos premium",
        "status": "pendiente"
      },
      {
        "title": "Dise√±ar sistema de progreso y certificaciones",
        "status": "pendiente"
      }
    ],
    "status": "completado"
  },
  {
    "title": "Aplicaci√≥n de Control Financiero",
    "description": "Construir una app que permita a los usuarios registrar gastos, ingresos, establecer presupuestos mensuales y generar gr√°ficos comparativos.",
    "deadline": "2025-09-28",
    "priority": "alta",
    "createdAt": "2025-09-25T22:09:05.808Z",
    "doc": "# üí∞ Aplicaci√≥n de Control Financiero\n\nEste proyecto busca desarrollar una herramienta que permita al usuario tener una visi√≥n clara de sus finanzas personales o empresariales.\n\n## Funcionalidades principales\n- Registro de **ingresos** y **gastos** con categor√≠as personalizadas.\n- Visualizaci√≥n en un **dashboard interactivo** con gr√°ficos y m√©tricas clave.\n- Filtros por fechas y tipos de transacciones.\n- Balance autom√°tico y reportes descargables (PDF/Excel).\n- Alertas para controlar gastos excesivos.\n\n## Tecnolog√≠as\n- **Frontend**: React + Bootstrap (UI responsiva)\n- **Backend**: Node.js + Express\n- **Base de datos**: MongoDB / MySQL\n- **Gr√°ficos**: Recharts o Chart.js\n- **Exportaci√≥n**: Librer√≠as para PDF/Excel (ej: jsPDF, SheetJS)\n\n## Objetivos\n1. Ofrecer una soluci√≥n simple pero potente de control financiero.\n2. Mejorar la organizaci√≥n econ√≥mica del usuario.\n3. Aprender integraci√≥n de librer√≠as externas (gr√°ficos y exportaci√≥n).\n",
    "tasks": [
      {
        "title": "Dise√±ar el dashboard principal con gr√°ficos de ingresos y gastos",
        "status": "en progreso"
      },
      {
        "title": "Implementar formularios para registrar ingres y egresos",
        "status": "completado"
      },
      {
        "title": "Implementar balance mensual automatico",
        "status": "completado"
      },
      {
        "title": "Configurar alertas de gastos que superan un l√≠mite definido",
        "status": "en progreso"
      },
      {
        "title": "Hacer pruebas en desktop y mobile para asegurar usabilidad",
        "status": "pendiente"
      }
    ],
    "status": "en progreso"
  },
  {
    "title": "Sistema de Turnos M√©dicos Online",
    "description": "Construir una app que permita a los usuarios registrar gastos, ingresos, establecer presupuestos mensuales y generar gr√°ficos comparativos.",
    "deadline": "2025-11-27",
    "priority": "baja",
    "createdAt": "2025-09-25T22:10:12.446Z",
    "doc": "# Sistema de Turnos M√©dicos Online ü©∫\n\n## Descripci√≥n General\nEste proyecto busca digitalizar la gesti√≥n de turnos m√©dicos, reduciendo la carga administrativa y mejorando la experiencia del paciente.\n\n## Funcionalidades Clave\n- Registro de pacientes y m√©dicos.  \n- Reserva, modificaci√≥n y cancelaci√≥n de turnos en l√≠nea.  \n- Agenda integrada con disponibilidad de profesionales.  \n- Env√≠o de recordatorios autom√°ticos por email y SMS.  \n\n## Objetivos\n- Reducir tiempos de espera en la atenci√≥n.  \n- Minimizar errores administrativos.  \n- Mejorar la comunicaci√≥n m√©dico-paciente.  \n\n## Tecnolog√≠as Propuestas\n- **Frontend:** React + Bootstrap.  \n- **Backend:** Node.js + Express.  \n- **Base de datos:** MySQL o PostgreSQL.  \n- **Notificaciones:** Twilio (SMS) + Nodemailer (Email).  \n\n---\n",
    "tasks": [
      {
        "title": "Dise√±ar el modelo de datos para pacientes, medicos y turnos",
        "status": "completado"
      },
      {
        "title": "Implementar la l√≥gica de reserva y validaci√≥n de horarios",
        "status": "en progreso"
      },
      {
        "title": "Configurar notificaciones autom√°ticas (email/SMS)",
        "status": "pendiente"
      },
      {
        "title": "Crear panel de administraci√≥n para m√©dicos y secretarias",
        "status": "pendiente"
      }
    ],
    "status": "pendiente"
  },
  {
    "title": "E-commerce de Ropa Urbana",
    "description": "Desarrollar un cat√°logo de productos con carrito de compras, pasarela de pago integrada y gesti√≥n de pedidos desde el panel de administrador.",
    "deadline": "2025-10-11",
    "priority": "media",
    "createdAt": "2025-09-25T22:10:56.882Z",
    "doc": "# üõí Proyecto E-commerce B√°sico\n\nEste proyecto consiste en el desarrollo de una tienda en l√≠nea que permita:\n\n- Explorar productos mediante un cat√°logo navegable.\n- A√±adir productos al carrito en tiempo real.\n- Completar compras con un flujo de checkout seguro.\n- Administrar productos desde un panel b√°sico (CRUD).\n\n## Tecnolog√≠as principales\n- **Frontend**: React + Bootstrap\n- **Backend**: Node.js + Express\n- **Base de datos**: JSON local o MySQL\n- **Deploy**: Render (backend) + Netlify (frontend)\n\n## Objetivos\n1. Practicar integraci√≥n frontend-backend.\n2. Simular un flujo de compra real.\n3. Desarrollar buenas pr√°cticas de arquitectura en proyectos web.\n",
    "tasks": [
      {
        "title": "Dise√±ar mockups iniciales de la tienda",
        "status": "pendiente"
      },
      {
        "title": "Configurar base de datos de productos",
        "status": "pendiente"
      },
      {
        "title": "Implementar listado de productos con filtros por categoria",
        "status": "pendiente"
      },
      {
        "title": "Crear carrito din√°mico con actualizaci√≥n en tiempo real",
        "status": "pendiente"
      },
      {
        "title": "Testear flujos de compra en desktop y mobile",
        "status": "pendiente"
      }
    ],
    "status": "pendiente"
  },
  {
    "title": "Dashboard de Anal√≠tica Web",
    "description": "Crear un panel con m√©tricas clave (usuarios activos, ventas, conversiones) y visualizaciones interactivas con gr√°ficos y filtros din√°micos",
    "deadline": "2025-10-01",
    "priority": "alta",
    "createdAt": "2025-09-25T22:13:38.437Z",
    "doc": "# Documentaci√≥n üöÄ\n\nDescribe aqu√≠ el proyecto...",
    "tasks": [
      {
        "title": "Conectar el dashboard con Google Analytics y otras fuentes",
        "status": "completado"
      },
      {
        "title": "Dise√±ar visualizaciones interactivas (gr√°ficos y tablas din√°micas)",
        "status": "en progreso"
      },
      {
        "title": "Implementar filtros por rango de fechas, campa√±as y usuarios",
        "status": "pendiente"
      }
    ],
    "status": "pendiente"
  }
]